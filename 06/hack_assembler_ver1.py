# -*- coding: utf-8 -*-
"""hack_Assembler

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Dr31stArdeOXkYZ2zCRupD8bK2tZFQl3

hack 전용 assembler 설계

1. 어떤 심볼이나 이러한 것을 처리하는 기능없이 그냥 정해진 기계어로 바꿔주는 프로그램 만들기
  1-1 공백제거 및 //구간 제거
  1-2 opcode에 따라 기계어로 작성

2. 심볼 등 추가되었을 때 이를 처리 해주는 프로그램 만들기
  2-1 ()를 테이블에 추가
  2-2 변수를 테이블에 추가
  2-완 심볼 등을 모두 테이블에 있는 데이터로 치환


순서는 1-1 -> 2-1 -> 2-2 -> 2-완 -> 1-2 순서로 진행
"""

filename = input()

file = filename.split('.')

hackname = file[0]

hackname = hackname + ".hack"

f = open(hackname, 'w')
f.close()

"""//파일 이름을 받아서 .hack파일로 변환
filename은 기존 asm파일 hackname은 hack파일을 뜻함
"""

fw = open("temp.txt", 'w')
fr = open(filename, 'r')

for line in fr:
  line = line.strip()
  line = line + "\n"
  if "//" in line:
    continue
  elif line == "\n":
    continue
  else:
   fw.write(line)

fr.close()
fw.close()

"""//.hack 파일에 기존 asm파일에서 공백과 주석제거 (1-1)"""

fr = open("temp.txt", 'r')
fw = open(hackname, 'w')
for line in fr:
  if '@' in line:
    line = line.strip('@')
    line = int(line)
    line = bin(line)
    line = str(line)
    line = line.lstrip("0b")
    count = 0
    newline = "0000000000000000"+line+"\n"
    for i in line:
      count = count + 1
    newline = newline[count:]
    line = newline
    fw.write(line)
  else:
    des = ""
    com = ""
    jum = ""  
    tdes = ""
    tcom = ""
    tjum = "" #변수초기화

    dest = line.split('=')
    if len(dest) == 2:
      des = dest[0]
      comp = dest[1]
    else:
      comp=dest[0]  #dest분리 (dest문)
 

    comp = comp.split(';')
    if len(comp) == 2:
      com = comp[0]
      jum = comp[1]
    else:
      com = comp[0] #comp분리 (comp, jump문)
    des=des.rstrip('\n')
    com=com.rstrip('\n')
    jum=jum.rstrip('\n')

    if des == "":
      tdes = "000"
    elif des == "M":
      tdes = "001"
    elif des == "D":
      tdes = "010"
    elif des == "MD":
      tdes = "011"
    elif des == "A":
      tdes = "100"
    elif des == "AM":
      tdes = "101"
    elif des == "AD":
      tdes = "110"
    elif des == "AMD":
      tdes = "111"        #des 기계어 변환
 

    if com == "" or com == "0":
      tcom = "0101010"
    elif com == "1":
      tcom = "0111111"
    elif com == "-1":
      tcom = "0111010"
    elif com == "D":
      tcom = "0001100"
    elif com == "A":
      tcom = "0110000"
    elif com == "!D":
      tcom = "0001101"
    elif com == "!A":
      tcom = "0110001"
    elif com == "-D":
      tcom = "0001111"
    elif com == "-A":
      tcom = "0110011"
    elif com == "D+1":
      tcom = "0011111"
    elif com == "A+1":
      tcom = "0110111"
    elif com == "D-1":
      tcom = "0001110"
    elif com == "A-1":
      tcom = "0110010"
    elif com == "D+A":
      tcom = "0000010"
    elif com == "D-A":
      tcom = "0010011"
    elif com == "A-D":
      tcom = "0000111"
    elif com == "D&A":
      tcom = "0000000"
    elif com == "D|A":
      tcom = "0010101"
    elif com == "M":
      tcom = "1110000"
    elif com == "!M":
      tcom = "1110001"
    elif com == "-M":
      tcom = "1110011"
    elif com == "M+1":
      tcom = "1110111"
    elif com == "M-1":
      tcom = "1110010"
    elif com == "D+M":
      tcom = "1000010"
    elif com == "D-M":
      tcom = "1010011"
    elif com == "M-D":
      tcom = "1000111"
    elif com == "D&M":
      tcom = "1000000"
    elif com == "D|M":
      tcom = "1010101"      #com 기계어 변환

    
    if jum == "":
      tjum = "000"
    elif jum == "JGT":
      tjum = "001"
    elif jum == "JEQ":
      tjum = "010"
    elif jum == "JGE":
      tjum = "011"
    elif jum == "JLT":
      tjum = "100"
    elif jum == "JNE":
      tjum = "101"
    elif jum == "JLE":
      tjum = "110"
    elif jum == "JMP":
      tjum = "111"          #jum 기계어 변환
    
    line = "111" + tcom + tdes + tjum + "\n"
    fw.write(line)

fw.close()
fr.close()

"""// 1-2 opcode에 따라 기계어로 작성




"""

