//function Sys.init 0
(Sys.init)
@0
D=A
(LOOP_Sys.init)
@FSTART_Sys.init
D;JEQ
@SP
AM=M+1
A=A-1
M=0
D=D-1
@LOOP_Sys.init
0;JMP
(FSTART_Sys.init)
//push constant 4
@4
D=A
@SP
AM=M+1
A=A-1
M=D
//call Main.fibonacci 1
@Sys.Main.fibonacci$ret.0
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Sys.Main.fibonacci$ret.0)
//label WHILE
(WHILE$bar)
//goto WHILE
@WHILE$bar
0;JMP
//function Main.fibonacci 0
(Main.fibonacci)
@0
D=A
(LOOP_Main.fibonacci)
@FSTART_Main.fibonacci
D;JEQ
@SP
AM=M+1
A=A-1
M=0
D=D-1
@LOOP_Main.fibonacci
0;JMP
(FSTART_Main.fibonacci)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
AM=M+1
A=A-1
M=D
//push constant 2
@2
D=A
@SP
AM=M+1
A=A-1
M=D
//lt
@SP
AM=M-1
D=M
A=A-1
D=M-D
@TRUE
D;JLT
@SP
A=M-1
M=0
@FALSE
0;JMP
(TRUE)
@SP
A=M-1
M=-1
(FALSE)
//if-goto IF_TRUE
@SP
AM=M-1
D=M
@IF_TRUE$bar
D;JNE
//goto IF_FALSE
@IF_FALSE$bar
0;JMP
//label IF_TRUE
(IF_TRUE$bar)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
AM=M+1
A=A-1
M=D
//return
@LCL
D=M
@5
M=D
D=D-A
A=D
D=M
@retAddr
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@5
AM=M-1
D=M
@THAT
M=D
@5
AM=M-1
D=M
@THIS
M=D
@5
AM=M-1
D=M
@ARG
M=D
@5
AM=M-1
D=M
@LCL
M=D
@retAddr
A=M
0;JMP
//label IF_FALSE
(IF_FALSE$bar)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
AM=M+1
A=A-1
M=D
//push constant 2
@2
D=A
@SP
AM=M+1
A=A-1
M=D
//sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//call Main.fibonacci 1
@Main.Main.fibonacci$ret.0
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.Main.fibonacci$ret.0)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
AM=M+1
A=A-1
M=D
//push constant 1
@1
D=A
@SP
AM=M+1
A=A-1
M=D
//sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//call Main.fibonacci 1
@Main.Main.fibonacci$ret.1
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.Main.fibonacci$ret.1)
//add
@SP
AM=M-1
D=M
A=A-1
M=M+D
//return
@LCL
D=M
@5
M=D
D=D-A
A=D
D=M
@retAddr
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@5
AM=M-1
D=M
@THAT
M=D
@5
AM=M-1
D=M
@THIS
M=D
@5
AM=M-1
D=M
@ARG
M=D
@5
AM=M-1
D=M
@LCL
M=D
@retAddr
A=M
0;JMP
