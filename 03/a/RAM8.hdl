// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load ,sel=address ,a=load0 ,b=load1 ,c=load2 ,d=load3 ,e=load4 ,f=load5 ,g=load6 ,h=load7);
    Register( in = in, load = load0, out = ou0);
    Register( in = in, load = load1, out = ou1);
    Register( in = in, load = load2, out = ou2);
    Register( in = in, load = load3, out = ou3);
    Register( in = in, load = load4, out = ou4);
    Register( in = in, load = load5, out = ou5);
    Register( in = in, load = load6, out = ou6);
    Register( in = in, load = load7, out = ou7);
    Mux8Way16 ( a = ou0, b = ou1, c = ou2, d = ou3, e = ou4, f = ou5, g = ou6, h = ou7, sel = address, out = out);
}