// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    And16( a[0..11] = address, b = true, out[3..11] = rmadd, out[0..2] = dmadd);
    DMux8Way(in=load ,sel=dmadd , a=load0 ,b=load1 ,c=load2 ,d=load3 ,e=load4 ,f=load5 ,g=load6 ,h=load7);
    RAM512( in = in, load = load0, address = rmadd, out = ou0);
    RAM512( in = in, load = load1, address = rmadd, out = ou1);
    RAM512( in = in, load = load2, address = rmadd, out = ou2);
    RAM512( in = in, load = load3, address = rmadd, out = ou3);
    RAM512( in = in, load = load4, address = rmadd, out = ou4);
    RAM512( in = in, load = load5, address = rmadd, out = ou5);
    RAM512( in = in, load = load6, address = rmadd, out = ou6);
    RAM512( in = in, load = load7, address = rmadd, out = ou7);
    Mux8Way16 ( a = ou0, b = ou1, c = ou2, d = ou3, e = ou4, f = ou5, g = ou6, h = ou7, sel = dmadd, out = out);
}